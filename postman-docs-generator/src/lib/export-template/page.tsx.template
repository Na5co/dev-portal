'use client';

import { useEffect, useState, CSSProperties } from 'react';
import { ParsedCollection } from '@/lib/postman-parser';
import { CustomizationState } from '@/lib/types';
import { generateColorTheme } from '@/lib/colors';
import { fontFamilies } from '@/lib/constants';

interface AppData {
  collection: ParsedCollection;
  customization: CustomizationState;
}

// Simplified static components to avoid SSG issues
function SimpleHeader({ logo, title }: { logo: string | null; title: string }) {
  return (
    <header className="border-b bg-white/70 backdrop-blur-sm sticky top-0 z-50 h-[69px]">
      <div className="flex items-center justify-between px-6 h-full">
        <div className="flex items-center gap-3">
          {logo ? (
            <img src={logo} alt="Logo" className="h-8 w-auto" />
          ) : (
            <div className="w-8 h-8 bg-gray-900 rounded-lg flex items-center justify-center">
              <span className="text-white text-lg">ðŸ“š</span>
            </div>
          )}
        </div>
        <div className="text-lg font-semibold text-gray-900">{title}</div>
      </div>
    </header>
  );
}

function SimpleDocumentation({ collection, footer }: { collection: ParsedCollection; footer: string }) {
  return (
    <div className="max-w-7xl mx-auto p-4 sm:p-6 lg:p-8">
      <div className="pb-8">
        <h1 className="text-4xl lg:text-5xl font-extrabold tracking-tight text-gray-900">
          {collection.name}
        </h1>
        {collection.description && (
          <div className="mt-6 prose max-w-3xl">
            <p>{collection.description}</p>
          </div>
        )}
      </div>
      <div>
        {collection.items.map((item, index) => (
          <div key={index} className="border-t py-12">
            <h3 className="text-2xl font-bold tracking-tight text-gray-800 mb-4">
              {item.name}
            </h3>
            {item.description && (
              <div className="mb-4">
                <p>{item.description}</p>
              </div>
            )}
            {item.request && (
              <div className="bg-white p-4 rounded border">
                <div className="flex items-center gap-2 mb-2">
                  <span className="px-2 py-1 text-sm font-semibold rounded bg-blue-100 text-blue-800">
                    {item.request.method}
                  </span>
                  <code className="bg-gray-100 px-2 py-1 rounded text-sm">
                    {item.request.url}
                  </code>
                </div>
              </div>
            )}
          </div>
        ))}
      </div>
      {footer && (
        <div className="mt-12 pt-8 border-t text-center text-gray-500">
          <p>{footer}</p>
        </div>
      )}
    </div>
  );
}

export default function Home() {
  const [data, setData] = useState<AppData | null>(null);
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    fetch('/data.json')
      .then(res => {
        if (!res.ok) throw new Error('Failed to load static data');
        return res.json();
      })
      .then((data: AppData) => {
        setData(data);
      })
      .catch(err => {
        console.error(err);
        setError('Could not load documentation data.');
      })
      .finally(() => setIsLoading(false));
  }, []);

  if (isLoading) {
    return <div style={{textAlign: 'center', padding: '2rem'}}>Loading documentation...</div>;
  }

  if (error) {
    return <div style={{textAlign: 'center', padding: '2rem', color: 'red'}}>{error}</div>;
  }

  if (!data) {
    return <div style={{textAlign: 'center', padding: '2rem', color: 'red'}}>Failed to load data.</div>;
  }

  const { collection, customization } = data;

  const styles = {
    ...generateColorTheme(customization.accentColor),
    '--font-family': fontFamilies[customization.font],
  } as CSSProperties;

  return (
    <div
      style={styles}
      className="min-h-screen bg-slate-50 max-w-full overflow-x-hidden"
    >
      <SimpleHeader logo={customization.logo} title={collection.name} />
      <SimpleDocumentation collection={collection} footer={customization.footer} />
    </div>
  );
}
